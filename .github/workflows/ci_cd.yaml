name: CI/CD Pipeline (Run Tests, Build, and Push Docker Images and Run on EC2)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs: 
  build-push-deploy:
    runs-on: ubuntu-latest
    name: Test, Build, Push Docker Images and Deploy to EC2

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.jobs
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Server Dependencies
        working-directory: server
        run: npm install

      - name: Run Backend Tests
        working-directory: server
        run: npm run test

      - name: Install Client Dependencies
        working-directory: client
        run: npm install

      - name: Build Frontend
        working-directory: client
        run: npm run build  

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}  

      - name: Build, Tag and Push Backend (Server) Docker Image
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/todoapp-backend:latest ./server
          docker push ${{ vars.DOCKER_USERNAME }}/todoapp-backend:latest

      - name: Build, Tag and Push Frontend (Client) Docker Image
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/todoapp-frontend:latest ./client
          docker push ${{ vars.DOCKER_USERNAME }}/todoapp-frontend:latest

      - name: Copy docker-compose to EC2 (scp)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml"
          target: "~/todoapp/"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo apt update && sudo apt install -y docker.io
            sudo systemctl enable --now docker
            sudo apt install -y docker-compose

            cd ~/todoapp/
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d


      